@using PhotoContest.Models.Enumerations
@model PhotoContest.App.Models.BindingModels.Contests.ViewPhotoModel
<h2>@Model.ContestTitle: @Model.Title</h2>
<div class="photoContainer">
    <img src="@Model.PhotoLink" alt="@Model.Title" />
</div>
@if (Model.Votes.Where(v => v.ContestId == @Model.ContestId).Count(v => v.User.UserName == this.User.Identity.Name) == 0)
{
    <div id="loading" class="alert alert-info">Loading...</div>
    <div id="voteSuccessfully" class="alert alert-success hidden">You vote successfully.</div>
    @Html.AntiForgeryToken()
    <p>
        @using (Ajax.BeginForm("Vote", null ,new AjaxOptions()
        {
            HttpMethod = "post",
            LoadingElementId = "loading",
            OnSuccess = "voteSuccessfully"
        }, new { id = "ratingForm" }))
            {
                <input type="hidden" name="contestId" value="@Model.ContestId" />
                <input type="hidden" name="photoId" value="@Model.Id" />
                <input type="number" name="stars" min="1" max="5" value="5" />
                <input type="submit" name="submit" value="Vote" />
            }
    </p>
}
<p>Rating: <span class="photoRatingValue">
    @if (@Model.Votes.Where(v => v.ContestId == @Model.ContestId).Any())
    {
        @(string.Format("{0:F2}", Model.Votes.Where(v => v.ContestId == @Model.ContestId).Average(v => v.Stars)));
    }
    else
    {
        @:No votes yet.
    }
    </span>
    </p>
@section Scripts {

    @Scripts.Render("~/bundles/main")
    @Scripts.Render("~/bundles/unobtrusive-ajax")
}